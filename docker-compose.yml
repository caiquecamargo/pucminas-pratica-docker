services:

  db:
    container_name: db
    image: postgres
    restart: always
    shm_size: 128mb
    networks:
      - db_network
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  backend:
    container_name: backend
    restart: always
    build: 
      context: .
      dockerfile: backend.dockerfile
    networks:
      - backend_network
      - db_network
    environment:
      FLASK_APP: "run.py"
      FLASK_DB_TYPE: "postgres"
      FLASK_DB_USER: ${POSTGRES_USER}
      FLASK_DB_NAME: ${POSTGRES_DB}
      FLASK_DB_PASSWORD: ${POSTGRES_PASSWORD}
      FLASK_DB_HOST: "db"
      FLASK_DB_PORT: "5432"
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: frontend
    restart: always
    build: 
      context: ./frontend
      dockerfile: frontend.dockerfile
      args:
        REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
    networks:
      - backend_network
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    depends_on:
      - backend

networks:
  db_network:
    driver: bridge
  backend_network:
    driver: bridge

volumes:
  db_data: